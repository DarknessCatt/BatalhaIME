#!/usr/bin/python3

"""
Lê, na entrada padrão, um programa na linguagem de montagem da máquina
virtual e retorna um programa em C que executa este programa.

Uso:
    montador < entrada > saida
"""
from sys import stdin

l = stdin.readline()
ip = 0

tabsim = {}

# Adiciona os Includes necessarios do maq.c
print("#include <stdio.h>")
print("#include \"maq.h\"")
print("INSTR prog[] = {")

# Traduz os codigos em maquina para a estrutura do Instruct
while l:
    label = op = ""
    arg   = 0
    tipo  = "NUM"
    try:
        l = l[:l.index('#')]
    except:
        pass
    keys = l.split()
    if len(keys) > 0 and keys[0].endswith(":"):
        label = keys[0][:-1]              #jogando fora o ':'
        tabsim[label]=ip
        keys.pop(0)
    if len(keys) > 0:
        op = keys.pop(0)
    if len(keys) > 0:
        arg = keys.pop(0)
        if arg in tabsim:
            arg = tabsim[arg]
    if len(keys) > 0:
        tipo = keys.pop(0)
    if op != "":
        print("{ %s, {%s, %s} },"%(op,tipo,arg))
    else:
        print()
        ip -= 1
    l = stdin.readline()
    ip += 1

print("};")

#Cria um main para teste do cliente ( igual ao motor.c )
print("int main(int ac, char **av) {")   
print("Maquina *maq = cria_maquina(prog);")
print("exec_maquina(maq, 1000);")
print("destroi_maquina(maq);")
print("}")

print("""Maquina *gen(){
        return cria_maquina(prog); 
    }
    """)
# Local variables:
# mode: python
# End:
